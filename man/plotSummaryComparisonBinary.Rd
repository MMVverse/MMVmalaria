% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/07-ModelAssessment.R
\name{plotSummaryComparisonBinary}
\alias{plotSummaryComparisonBinary}
\title{Plotting Comparison of Summarized Data for Binary Variables}
\usage{
plotSummaryComparisonBinary(
  plotData,
  CIlevel = 90,
  compCategory = "TRTNAME",
  variableCol = "Variable",
  sourceCol = "Source"
)
}
\arguments{
\item{plotData}{Data.frame containing summarized endpoints.}

\item{CIlevel}{Numeric value representing the confidence interval used for summarizing simulated percentiles (default is 90).}

\item{compCategory}{String specifying the column to be used for comparison (default is "TRTNAME").}

\item{variableCol}{String specifying the column name to be used as variables (default is "Variable").}

\item{sourceCol}{String specifying the column name to be used as data source for color (default is "Source").}
}
\value{
A list of ggplot objects comparing summarized binary variables from simulation and observation.
}
\description{
Generates a list of ggplot objects where summarized simulations and
observations are compared visually. Summarized input is obtained from
applying \code{summaryByTrial} and \code{summarAcrossTrials} to data from VPCs for simulation data.
Additionally, summarized input for observations using \code{summaryByTrial} is augmented with confidence intervals
using the Clopper-Pearson method.
Comparison is done per \code{TRTNAME} by default. A list of ggplot objects is returned with one plot per unique variable.
}
\details{
This function creates a visual comparison of summarized data for binary variables. It generates a ggplot object for each unique variable in the dataset.
The summarized input for simulations is obtained using the \code{summaryByTrial} and \code{summarAcrossTrials} functions, while the summarized input for observations
is augmented with confidence intervals using the Clopper-Pearson method. The comparison is performed per \code{TRTNAME} by default, but this can be customized
using the \code{compCategory} parameter.
}
\examples{
\dontrun{
# Example usage:
# prepare categories for dataSim and dataObs
data <- dataSim <- expand.grid(
  TRTNAME =  c("Treatment A", "Treatment B"), 
  Variable =  c("Var1", "Var2"), 
  Source = c("Sim", "Obs", "CSR")
)

# add N and k
data$N <- rep(c(10,20), 6)
data$k <- rep(c(5,8,2,12), 3) + sample.int(3, 12, replace=TRUE)

# add CI 
CIs <- binom::binom.confint(data$k, data$N, conf.level = 0.90, methods = "exact" )
data$`CI Median` <- CIs$mean*100
data$`CI Low` <- CIs$lower*100
data$`CI High` <- CIs$upper*100

# plot
ggplots <- plotSummaryComparisonBinary(data)

# Display the first plot
print(ggplots[[1]])
}

}
\seealso{
\code{\link[=plotSummaryComparisonContinuous]{plotSummaryComparisonContinuous()}}

Other Model Assessment: 
\code{\link{add_CovariateToModelSpec}()},
\code{\link{add_OneCovariateToModelSpec}()},
\code{\link{assess_PDcomboModel}()},
\code{\link{backwardElimination}()},
\code{\link{compare_DataModelMMV}()},
\code{\link{compare_DataPopPred}()},
\code{\link{compare_IndPredFits}()},
\code{\link{compare_ModelEstimateRobustness}()},
\code{\link{compare_PredFitsSYS}()},
\code{\link{forwardSelection}()},
\code{\link{likelihoodRatioTestIQR}()},
\code{\link{plotSummaryComparisonContinuous}()},
\code{\link{plotVPC_MMVdataVPC}()},
\code{\link{remove_OneCovariateToModelSpec}()},
\code{\link{tablePopPDmalaria}()},
\code{\link{table_EstimatesComboNLME}()}
}
\author{
Karsten Kuritz (IntiQuan)
}
\concept{Model Assessment}
